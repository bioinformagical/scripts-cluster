#!/bin/sh

# Request a run time of 5 hours and 30 minutes
#PBS -l walltime=96:30:00

# Request 1 processor in 1 node
#PBS -l nodes=1:ppn=1

# Request 7600 megabytes memory per processor.  ( 48 usable CPUs)
##PBS -l pmem=7600mb
#PBS -l vmem=200gb
#PBS -N dupydupy
#PBS -q bigiron
export TMPDIR=$HOME/tmp

#Number of times to run this script
##PBS -t 1-3

##home=/gpfs/fs3/home/rreid2


# launching Launching build_lmer_table on a single node so it can run till the cows come home
#echo "Launching Repeat Masker"
#source /sw/functions.sh
#prepend_dir PATH $HOME/bin
#prepend_dir PATH $HOME/scripts
#prepend_dir PATH $HOME/bin/RepeatMasker

#export PATH=$HOME/bin:$PATH


cd ~/echinoderms/dl/120727B2

#file=$(sed -n -e "${PBS_ARRAYID}p" ./allfiles.txt)

#for file in $(find ./ -name "*.fastq");
#do
 #       echo   ${file};
	#qsub runRaadsTrim.sh $file

        #trimRaad.pl $file -h 1  #This will take all phred scores above one, i.e., not filter via quality.
        #	perl ./trimRaad.pl $file  -h 20
	#	perl ./trimRobsTweak.pl $file -h 20  
#		perl ./trimAdapterKmers.pl
 	#perl ./trimCountDups.pl ./$file 
#	perl ./trimdup.pl metal.fastq -h 0	
# 	perl ./trimdup.pl ceramic30.fastq -h 0
#	perl ./trimdup.pl ceramic60.fastq -h 0
#	perl ./trimadapter.pl ceramic30.fastq -h 20
#	perl ./trimRobsTweak.pl ceramic60.fastq -h 0
#	perl ./duptest.pl  ceramic60.fastq -h 0
#	perl ./adapterOnly.pl metal.fastq.dupNoShrink -h 0
#perl ./dynatrim.pl -h 20 metal.fastq

dir="bj23"
file="bj23_R2"

#cut adapter
~/sw/cutadapt-1.0/cutadapt -a GATCGGAAGAGCGGT $dir/$file.fastq > $dir/$file.fastq.adapt

#dynamically trim
perl ~/scripts/perl/dynatrim.pl -h 20 $dir/$file.fastq.adapt



echo "finished dup job"
#done

#perl ./trimRobsTweak.pl ./data/June_22nd_2011_Run/js1.fastq -h 0


