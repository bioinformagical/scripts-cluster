#!/bin/bash
#PBS -l walltime=336:00:00  # Maximum amount of real time for the job to run in HH:MM:SS
#PBS -l nodes=1:ppn=8     # Number of nodes and processors per node requested by job
#PBS -l mem=63GB           # Maximum physical memory to use for jobi
#PBS -N nnnglmr-raw2cor8         # User-defined name for job
#PBS -j oe                # Write STDERR to STDOUT output file
#PBS -q steelhead        # Job queue to submit this script to

# User prologue.  Must be owned by user, not writable by group or other
##PBS -l prologue=/projects/oat_genome/scripts/prologue.sh
# User epilogue.  Must be owned by user, not writable by group or other
##PBS -l epilogue=/projects/oat_genome/scripts/epilogue.sh
#PBS -t 1

IFS=$'\n'          # Internal Field Separator is newline
set -eu            # e - Exit on error
                   # u - Undefined variable is an error
                   # x - enable trace (print commands before running)
umask 007          # user  - all permissions
                   # group - all permissions
                   # other - no permissions
shopt -s nullglob  # Treat empty glob (*) as nothing instead of empty string
file=$(sed -n -e "${PBS_ARRAYID}p" /projects/oat_genome/canu/oat6/oat6-fastq.fofn)


cd /nobackup/oat_genome/align/raw2corrected


SEQUENCES=/nobackup/oat_genome/
ALIGNMENT=/nobackup/oat_genome/racon/aligned
CORRECTED=/nobackup/oat_genome/canu/oat6/oat6.correctedReads
outname=ngmlrRaw2Corrected-${PBS_ARRAYID}
THREADS=8

module load bwa
module load samtools

###Index the reference genome
#printf "Indexing the refrence \n"

start=$(date +%s)

#bwa index -p reference.idx -a bwtsw ${CORRECTED}

#end=$(date +%s)
#printf "Done, took $((${end}-${start})) seconds\n\n"

### BWA ALign reads to reference
printf "Aligning to corrected \n"

#~/sw/ngmlr/ngmlr-0.2.7/ngmlr --bin-size 16 --rg-id ${file} -x pacbio -i 0.6 --no-smallinv  -t ${THREADS} -r ${CORRECTED}.fasta -q ${file} -o ${outname}.sam 
~/sw/ngmlr/ngmlr-0.2.7/ngmlr --bin-size 4 --no-smallinv  -t ${THREADS} -r ${CORRECTED}.fasta -q ${file} -o ${outname}.sam 
samtools view -bS ${outname}.sam | samtools sort -T ${outname} -o ${outname}-sorted.bam
samtools index ${outname}-sorted.bam

#### MAKE VCF     ######
#samtools mpileup  --skip-indels --output ${outname}.bcf  \
#        -uf ${file}  ${outname}-sorted.bam
#bcftools view ${outname}.bcf > ${outname}.vcf


end=$(date +%s)
printf "Done, took $((${end}-${start})) seconds\n\n"
